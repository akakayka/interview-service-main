# ---------- Backend Deployment ----------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: coderev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: cr.yandex/${CLUSTER_HOST}/backend:latest
          ports:
            - containerPort: 5001
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "Production"
            - name: MONGODB_SSL_CA_FILE
              value: "/certs/root.crt"
            - name: POSTGRESQL_HOST
              value: ${POSTGRESQL_HOST}

          resources:
            limits:
              cpu: "1"
              memory: "512Mi"        

# ---------- Backend Service ----------
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service  # Изменили с "backend" для ясности
  namespace: coderev
spec:
  selector:
    app: backend
  ports:
    - name: backend-port
      port: 5001
      targetPort: 5001
      protocol: TCP

# ---------- Frontend Deployment ----------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: coderev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: cr.yandex/${CLUSTER_HOST}/frontend:latest
          ports:
            - containerPort: 80
          env:
            - name: VITE_API_URL
              value: "/api"
          envFrom:
            - configMapRef:
                name: frontend-env
          resources:
            limits:
              cpu: "0.5"
              memory: "256Mi"

# ---------- Frontend Service ----------
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: coderev
spec:
  selector:
    app: frontend
  ports:
    - name: frontend-port
      port: 80
      targetPort: 80
      protocol: TCP
  type: ClusterIP

# ---------- Ingress ----------
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: coderev-ingress
  namespace: coderev
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.org/websocket-services: "backend-service"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 5001
          - path: /signalrtc
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 5001
